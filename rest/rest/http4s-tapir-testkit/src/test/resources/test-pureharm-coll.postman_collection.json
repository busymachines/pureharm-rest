{
	"info": {
		"_postman_id": "b3512500-082c-45e9-a472-619e6a73ec5b",
		"name": "test-pureharm-coll",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "test_decoding",
			"item": [
				{
					"name": "put_test_method_not_found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "730dd741-9fce-4f5d-a5df-b5c1d2424d4e",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": 222,\n    \"f3\": 333,\n    \"fl\": [123],\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "post_no_auth_invalid_body",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9cfabf1-94b8-4321-9176-85f6c82337ea",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"post\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_json_0\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": 222,\n    \"f3\": 333,\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/no_auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"no_auth"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "post_invalid_json_body_top_level_field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8c006bb-238a-4134-8eef-8e109ba213b8",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"proper json error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_json_0\");",
									"    pm.expect(jsonData.parameters.expectedType).to.eql(\"Int\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": \"123a\",\n    \"f3\": 333,\n    \"fl\": [123],\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "post_invalid_json_body_value_in_array",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b107e81-d580-4df3-8716-b55748ed8176",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"proper json error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_json_0\");",
									"    pm.expect(jsonData.parameters.expectedType).to.eql(\"UUID\")",
									"    pm.expect(jsonData.parameters.path[5]).to.eql(\"failed to decode array element index [3]\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": \"123\",\n    \"f3\": 333,\n    \"fl\": [123],\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"111111\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "post_invalid_json_body_syntax_error",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "70fd5660-daaa-406d-aefe-2f7c5269019f",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"proper json error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_json_1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": \"123a\",\n    \"f3\": 333,\n    \"fl\": [123]\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_UUID_param_long",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a5d48ad9-ddba-4f19-8d1e-d3536c5bdb33",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"d7417268-c5e1-11ea-87d0-0242ac130003\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_q/d7417268-c5e1-11ea-87d0-0242ac130003?long=123456",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_q",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							],
							"query": [
								{
									"key": "long",
									"value": "123456"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_UUID_param_long_opt_int",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e7104b1-ade2-4331-b5c8-ab55637fa8be",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"d7417268-c5e1-11ea-87d0-0242ac130003\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_q/d7417268-c5e1-11ea-87d0-0242ac130003?long=123456&opt_int=12",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_q",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							],
							"query": [
								{
									"key": "long",
									"value": "123456"
								},
								{
									"key": "opt_int",
									"value": "12"
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_UUID_invalid_param_long_missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "415a69b0-d416-4607-bebf-d08fd15b9065",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_missing_qp\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_q/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_q",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_m_UUID_invalid_path_TODO",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c82e63fb-18e5-4b55-a23c-ec6077d54f08",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"// pm.test(\"anomaly_id\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.id).to.eql(\"4\");",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test/d7417268-c5e1-11ea-87d0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test",
								"d7417268-c5e1-11ea-87d0"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_this_does_not_exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a8804d6-3da5-4a90-98a9-f866887545d0",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_this_does_not_exist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_this_does_not_exist"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_missing_auth_header",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "490b7d13-50b1-486a-b324-64f1dadc9e6f",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"auth_missing_header\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/test/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_invalid_value_for_x_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73912458-956a-4c8d-850c-2bcd7cd60590",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"auth_invalid_header\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "not-a-number"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_h_no_header",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a2776dec-c360-4556-98b3-589a95583e91",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"anomaly id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_missing_header\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							},
							{
								"key": "X-TEST-HEADER",
								"type": "text",
								"value": "1234",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_h/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_h",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_h_invalid_header_value",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cdbc4e67-4043-40b4-a756-6d687106dd01",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"header\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"rest_invalid_hd\");",
									"    pm.expect(jsonData.parameters.headerName).to.eql(\"X-TEST-HEADER\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							},
							{
								"key": "X-TEST-HEADER",
								"type": "text",
								"value": "not-a-number-yey"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_h/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_h",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "test_logic",
			"item": [
				{
					"name": "get_no_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed97ed95-72e2-458d-b6f4-76afe44cf718",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"no_auth\", function () {",
									"    var jsonData = pm.response.json();",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/no_auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"no_auth"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "post_no_auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3434e922-9561-45a8-a7b7-88821b20cb1e",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"post\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.f1).to.eql(\"11111\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": 222,\n    \"f3\": 333,\n    \"fl\": [123],\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/no_auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"no_auth"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "post_test",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91442202-5989-4598-9c7b-40febeb1f7fc",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"post\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.f1).to.eql(\"11111\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"f1\": \"11111\",\n    \"f2\": 222,\n    \"f3\": 333,\n    \"fl\": [123],\n    \"f4\": [\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\",\n        \"7b85370e-c51c-11ea-87d0-0242ac130003\"\n    ],\n    \"f5\": \"aaaaaa\"\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/test",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"f1\": \"<string>\",\n    \"f2\": \"<integer>\",\n    \"f3\": \"<long>\",\n    \"f4\": [\n        \"<string>\",\n        \"<string>\"\n    ],\n    \"f5\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/test",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_UUID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0b9264a-9631-4a55-a5ee-768902f4e70e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"d7417268-c5e1-11ea-87d0-0242ac130003\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_h",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "889ae2c7-583b-451a-87a7-6dc66586d9ac",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"d7417268-c5e1-11ea-87d0-0242ac130003\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							},
							{
								"key": "X-TEST-HEADER",
								"value": "1234",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_h/d7417268-c5e1-11ea-87d0-0242ac130003",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_h",
								"d7417268-c5e1-11ea-87d0-0242ac130003"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_throwable",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f0dc0b6-3bda-467e-89f3-2b9eb7a58e31",
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"UH_0\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/throwable",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"throwable"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_catastrophe",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee94311a-f35f-4608-aee7-f6274d0ea2c5",
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"    pm.response.to.have.status(500);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"IS_0\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/catastrophe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"catastrophe"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_not_implemented",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4b8eb2ce-1762-4c78-8a25-4ed1b77eeced",
								"exec": [
									"pm.test(\"Status code is 501\", function () {",
									"    pm.response.to.have.status(501);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"NI_0\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/not_implemented",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"not_implemented"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_anomalies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "71c94ff6-f6a3-45f7-bb33-b00966007031",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"test_anomalies\");",
									"});",
									"pm.test(\"contains messages\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"messages\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/anomalies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"anomalies"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a511f8f7-e0fa-4c80-916c-b5411c5f11c0",
								"exec": [
									"pm.test(\"Status code is 409\", function () {",
									"    pm.response.to.have.status(409);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"5\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/conflict",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"conflict"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_invalid_input",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f462ad58-fae8-4567-b320-01df7db1ffbf",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"4\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/invalid_input",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"invalid_input"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "get_test_denied",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "357b3d43-e05c-41fc-85a2-a78333635c1f",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"3\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/denied",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"denied"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_forbidden",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f99474c2-0927-432c-ba71-6133da077b4b",
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"2\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/forbidden",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"forbidden"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_unauthorized",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7b1b5bef-b7ba-4185-9463-fc3acc40078a",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"1\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/unauthorized",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"unauthorized"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "get_test_not_found",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a92e9e0-f68d-4e73-b80e-fb26d05362f1",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"pm.test(\"anomaly_id\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.eql(\"0\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/test_logic/not_found",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"test_logic",
								"not_found"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"message\": \"<string>\",\n \"parameters\": \"<object>\",\n \"messages\": {\n  \"id\": \"<string>\",\n  \"message\": \"<string>\",\n  \"parameters\": \"<object>\",\n  \"messages\": {\n   \"value\": \"<Circular reference to #/components/schemas/JsonObject detected>\"\n  }\n }\n}"
						},
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/test/:p1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"test",
										":p1"
									],
									"variable": [
										{
											"key": "p1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"<string>\",\n \"f1\": \"<string>\",\n \"f2\": \"<integer>\",\n \"f3\": \"<long>\",\n \"f4\": [\n  \"<string>\",\n  \"<string>\"\n ],\n \"f5\": \"<string>\"\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "http://localhost:12345/api",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}